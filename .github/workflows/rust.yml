name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64（添加 ubuntu 后缀）
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: fire-linux-x86_64
            original_binary: fire-cli # 原始产物名
            renamed_binary: fire-cli-ubuntu # 带平台后缀的产物名
          # macOS x86_64（添加 macos 后缀）
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: fire-macos-x86_64
            original_binary: fire-cli
            renamed_binary: fire-cli-macos
          # Windows x86_64（保持原名）
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: fire-windows-x86_64.exe
            original_binary: fire-cli.exe
            renamed_binary: fire-cli.exe # 不修改

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      # 构建产物
      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: full

      # 调试：查看构建产物原始名称
      - name: Debug build output (original)
        run: |
          echo "=== 构建目录: target/${{ matrix.target }}/release ==="
          ls -la target/${{ matrix.target }}/release/
        shell: bash

      # 重命名产物（仅 Ubuntu 和 macOS）
      - name: Rename binary with platform suffix
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          # 重命名原始产物为带平台后缀的名称
          mv target/${{ matrix.target }}/release/${{ matrix.original_binary }} \
             target/${{ matrix.target }}/release/${{ matrix.renamed_binary }}
        shell: bash

      # 调试：确认重命名后的产物
      - name: Debug build output (renamed)
        run: |
          echo "=== 重命名后构建目录: target/${{ matrix.target }}/release ==="
          ls -la target/${{ matrix.target }}/release/
        shell: bash

      # 上传重命名后的产物
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.renamed_binary }} # 上传重命名后的文件
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # 验证最终产物路径（带后缀）
      - name: Debug artifacts structure
        run: |
          sudo apt-get install -y tree
          echo "=== 最终 artifacts 目录结构 ==="
          tree artifacts
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes in this Release
            - detail to see [CHANGELOG](https://github.com/xiaoxustudio/fire-cli/blob/master/CHANGELOG.md)
          files: |
            artifacts/fire-linux-x86_64/fire-cli-ubuntu
            artifacts/fire-macos-x86_64/fire-cli-macos
            artifacts/fire-windows-x86_64.exe/fire-cli.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
